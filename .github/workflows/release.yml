name: Release (Production Build)

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.2.1
  workflow_dispatch:  # Allow manual trigger

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-production-build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Required to create releases
      packages: write  # Required for package uploads if needed
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full git history for version info
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Get version from tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=$(git describe --tags --dirty || echo "v0.0.0-dev")
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Install dev dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Quality checks (lint, format, types)
      run: |
        # Run as non-blocking to avoid blocking releases while improving code health
        ruff check . || true
        black --check . || true
        mypy src || true

    - name: Run unit tests (non-blocking)
      run: |
        # Unit tests only to keep release fast; non-blocking for now
        python3 run.py -m pytest -m unit -q || true
    
    - name: Create production build (canonical)
      run: |
        mkdir -p dist
        ./scripts/build/build-production.sh dist/signalhireagent --version "${{ steps.version.outputs.version }}" --force
    
    - name: Verify production build
      run: |
        set -e
        cd dist/signalhireagent
        test -x install.sh
        test -x signalhire-agent
        CI=true NONINTERACTIVE=1 ./install.sh
        ./signalhire-agent --help >/dev/null

    - name: Create build archive
      run: |
        cd dist
        tar -czf ../signalhire-agent-${{ steps.version.outputs.version }}-production.tar.gz signalhireagent
        cd ..
        (cd dist && zip -r ../signalhire-agent-${{ steps.version.outputs.version }}-production.zip signalhireagent)
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          signalhire-agent-${{ steps.version.outputs.version }}-production.tar.gz
          signalhire-agent-${{ steps.version.outputs.version }}-production.zip
        body: |
          ## SignalHire Agent ${{ steps.version.outputs.version }}
          
          ### Production Release (Canonical Build)

          This release is generated using the canonical production build script (`scripts/build/build-production.sh`) to exactly match local prod-like builds.

          **Download Options:**
          - `signalhire-agent-${{ steps.version.outputs.version }}-production.tar.gz` — Linux/macOS
          - `signalhire-agent-${{ steps.version.outputs.version }}-production.zip` — Windows/Universal

          ### Installation
          1. Download and extract the archive
          2. Run `./install.sh` to set up a virtual environment and dependencies
          3. Run `./signalhire-agent --help` to get started

          ### What's Included
          - `src/` — Core application code
          - `requirements.txt` — Production dependencies
          - `install.sh` — Installation script (venv + deps)
          - `signalhire-agent` — CLI wrapper
          - `.env` — Auto-copied/templated environment
          - `VERSION` — Version info (JSON)
          - Agent instruction files and CLI command docs

          ### Excluded (Development Only)
          - `tests/`, `specs/`, caches, and dev tooling/config

          For development and contributing, use the full repository.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-build-${{ steps.version.outputs.version }}
        path: dist/signalhireagent/
        retention-days: 30
