name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (${{ matrix.browser }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1/3, 2/3, 3/3]
        exclude:
          # Only run Firefox and WebKit on first shard to save time
          - browser: firefox
            shard: 2/3
          - browser: firefox
            shard: 3/3
          - browser: webkit
            shard: 2/3
          - browser: webkit
            shard: 3/3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup browsers
      run: npm run install:browsers

    - name: Install system dependencies
      run: npm run install:deps

    - name: Lint code
      run: npm run lint

    - name: Type check
      run: npm run type-check

    - name: Run tests (${{ matrix.browser }}, shard ${{ matrix.shard }})
      run: |
        npm run test:shard -- --project=${{ matrix.browser }} --shard=${{ matrix.shard }}
      env:
        BASE_URL: http://localhost:3000
        SKIP_WEBSERVER: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}-${{ matrix.shard }}
        path: |
          test-results/
          playwright-report/
        retention-days: 30

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup browsers
      run: npm run install:browsers

    - name: Run accessibility tests
      run: npm run test:accessibility
      env:
        BASE_URL: http://localhost:3000
        SKIP_WEBSERVER: true

  visual:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup browsers
      run: npm run install:browsers

    - name: Run visual tests
      run: npm run test:visual
      env:
        BASE_URL: http://localhost:3000
        SKIP_WEBSERVER: true

    - name: Upload visual diffs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-diffs
        path: test-results/
        retention-days: 30

  api:
    name: API Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run API tests
      run: npm run test:api
      env:
        API_BASE_URL: ${{ secrets.API_BASE_URL || 'http://localhost:3001' }}

  report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [test, accessibility, visual, api]
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-results-chromium-1/3
        path: test-results/

    - name: Generate combined report
      run: |
        # Combine test results from all jobs
        echo "Generating combined test report..."

        # Create summary
        echo "# Test Results Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Test Jobs Status" >> test-summary.md
        echo "- E2E Tests: ${{ needs.test.result }}" >> test-summary.md
        echo "- Accessibility: ${{ needs.accessibility.result }}" >> test-summary.md
        echo "- Visual Regression: ${{ needs.visual.result }}" >> test-summary.md
        echo "- API Tests: ${{ needs.api.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "Report generated at: $(date)" >> test-summary.md

    - name: Upload test summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
        retention-days: 30

    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const summary = `
          ## ðŸ§ª Test Results

          | Test Type | Status |
          |-----------|--------|
          | E2E Tests | ${{ needs.test.result }} |
          | Accessibility | ${{ needs.accessibility.result }} |
          | Visual Regression | ${{ needs.visual.result }} |
          | API Tests | ${{ needs.api.result }} |

          [View full test report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });
